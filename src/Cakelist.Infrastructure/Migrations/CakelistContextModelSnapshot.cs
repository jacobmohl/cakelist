// <auto-generated />
using System;
using Cakelist.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cakelist.Infrastructure.Migrations
{
    [DbContext(typeof(CakelistContext))]
    partial class CakelistContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cakelist.Business.Entities.CakelistRequestAggregate.CakeRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssignedToId");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedById");

                    b.Property<string>("Reason")
                        .IsRequired();

                    b.Property<string>("Status")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Cakelist.Business.Entities.CakelistRequestAggregate.CakeVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CakeRequestId");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<int>("CreatedById");

                    b.HasKey("Id");

                    b.HasIndex("CakeRequestId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("Cakelist.Business.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Cakelist.Business.Entities.CakelistRequestAggregate.CakeRequest", b =>
                {
                    b.HasOne("Cakelist.Business.Entities.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cakelist.Business.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cakelist.Business.Entities.CakelistRequestAggregate.CakeVote", b =>
                {
                    b.HasOne("Cakelist.Business.Entities.CakelistRequestAggregate.CakeRequest")
                        .WithMany("Votes")
                        .HasForeignKey("CakeRequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cakelist.Business.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
